<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 * MESSAGE_INFO
 * ID							ID						BIGINT						PRIMARY KEY					AUTO_INCREMENT
 * 会话ID						SESSION_ID				BIGINT
 * 用户ID						USER_ID					BIGINT
 * 接收用户ID						RECEIVE_USER_ID			BIGINT
 * 消息信息						MESSAGE					VARCHAR(255)
 * 消息状态						STATUS					INT
 * 创建时间						CREATE_TIME				TIMESTAMP					DEFAULT NOW()
 -->
<mapper namespace="com.hanslv.web.chat.mapper.MessageInfoMapper">
    <!-- 获取全部 -->
    <select id="selectAll" resultType="com.hanslv.web.chat.entity.MessageInfoEntity">
        SELECT * FROM MESSAGE_INFO;
    </select>

    <!-- 获取当前用户未读取消息 -->
    <select id="selectByUserIdAndStatus" resultType="com.hanslv.web.chat.entity.MessageInfoEntity">
        SELECT * FROM MESSAGE_INFO WHERE STATUS = #{status} AND RECEIVE_USER_ID = #{receiveUserId}
    </select>

    <!-- 获取当前Session的聊天信息 -->
    <select id="selectBySessionAndStatus" resultType="com.hanslv.web.chat.po.MessageInfoPo">
        SELECT
            b.ID AS sendUserId,
            b.NAME AS sendUserName,
            a.MESSAGE AS message,
            a.CREATE_TIME AS messageTime
        FROM MESSAGE_INFO a INNER JOIN USER_INFO b ON a.USER_ID = b.ID
        WHERE a.STATUS = #{status} AND a.SESSION_ID = #{sessionId}
        ORDER BY a.CREATE_TIME;
    </select>

    <!-- 插入单条 -->
    <insert id="insertOne" parameterType="com.hanslv.web.chat.entity.MessageInfoEntity" useGeneratedKeys="true" keyProperty="messageInfo.id">
        INSERT INTO MESSAGE_INFO
            (USER_ID, SESSION_ID, RECEIVE_USER_ID, MESSAGE, STATUS)
        VALUES (#{messageInfo.userId}, #{messageInfo.sessionId}, #{messageInfo.receiveUserId}, #{messageInfo.message}, #{messageInfo.status})
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="com.hanslv.web.chat.entity.MessageInfoEntity">
        INSERT INTO MESSAGE_INFO
            (USER_ID, SESSION_ID, RECEIVE_USER_ID, MESSAGE, STATUS)
        VALUES
        <foreach collection="messageInfoList" item="item" open="(" close=")" separator=",">
            #{item.userId}, #{item.sessionId}, #{item.receiveUserId}, #{item.message}, #{item.status}
        </foreach>
    </insert>

    <!-- 将消息更新为已读 -->
    <update id="updateMessageStatus">
        UPDATE MESSAGE_INFO SET STATUS = #{status} WHERE ID = #{messageId}
    </update>

    <!-- 获取当前用户相关的消息 -->
    <select id="messageList" resultType="com.hanslv.web.chat.po.MessageListPo">
        SELECT
            a.ID AS sessionId,
            c.ID AS otherUserId,
            c.NAME AS otherUserName,
            d.STATUS AS friendStatus,
            e.message AS latestMessage,
            e.STATUS AS messageStatus
        FROM (SELECT ID, USER_ID FROM SESSION_INFO WHERE USER_ID = #{userId}) a
            LEFT JOIN SESSION_INFO b ON a.ID = b.ID
            LEFT JOIN USER_INFO c ON b.USER_ID = c.ID
            LEFT JOIN FRIEND_INFO d ON c.ID = d.FRIEND_USER_ID AND d.USER_ID = #{userId}
            LEFT JOIN MESSAGE_INFO e ON a.ID = e.SESSION_ID AND b.LATEST_MESSAGE_ID = e.ID
        WHERE b.USER_ID != #{userId}
        GROUP BY b.ID;
    </select>
</mapper>